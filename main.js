!function(){"use strict";class e{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[],this.escListener=null}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const i=document.createElement("div");i.classList.add("cell","map-tile","map-tile-"+(t=e,s=this.boardSize,0===t?"top-left":t>0&&t<s-1?"top":t===s-1?"top-right":t%s==0&&0!==t&&t!==s*(s-1)?"left":t%s==7&&t!==s-1&&t!==s*s-1?"right":t===s*(s-1)?"bottom-left":t>s*(s-1)&&t<s*s-1?"bottom":t===s*s-1?"bottom-right":"center")),i.addEventListener("mouseenter",(e=>this.onCellEnter(e))),i.addEventListener("mouseleave",(e=>this.onCellLeave(e))),i.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(i)}var t,s;document.addEventListener("keydown",(e=>this.onEsc(e))),this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],i=document.createElement("div");i.classList.add("character",s.character.type);const a=document.createElement("div");a.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),r.style.width=`${s.character.health}%`,a.appendChild(r),i.appendChild(a),e.appendChild(i)}var t}addEscListener(e){this.escListener=e}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onEsc(e){"Escape"===e.key&&(e.preventDefault(),this.escListener())}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e]?.classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t?.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}deselectAll(){const{cells:e}=this;e.forEach((t=>this.deselectCell(e.indexOf(t))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const i=this.cells[e],a=document.createElement("span");a.textContent=t,a.classList.add("damage"),i.appendChild(a),a.addEventListener("animationend",(()=>{i.removeChild(a),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}var t="prairie",s="desert",i="arctic",a="mountain";class r{constructor(e,t="generic"){if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,"Character"===new.target.name)throw new Error("My dear, you should not call a Character, just characters :)")}}class o{constructor(e,t,s){if(!(e instanceof r))throw new Error("character must be instance of Character or its children");if("number"!=typeof s)throw new Error("position must be a number");this.character=e,this.side=t,this.position=s}}function l(e,t,s,i=!1){const a=function*(e,t){for(;;){const s=Math.floor(Math.random()*e.length),i=Math.ceil(Math.random()*t);yield{character:new e[s](i),level:i}}}(e,t),r=[];for(let e=0;e<s;e++){const e=a.next().value;i&&1!==e.level&&(e.character.attack+=5*(e.level-1),e.character.defence+=5*(e.level-1)),r.push(e.character)}return r}class h extends r{constructor(e){super(e),this.level=e,this.attack=25,this.defence=25,this.type="bowman",this.distance=2,this.distanceAttack=2}}class n extends r{constructor(e){super(e),this.level=e,this.attack=40,this.defence=10,this.type="swordsman",this.distance=4,this.distanceAttack=1}}class c extends r{constructor(e){super(e),this.level=e,this.attack=10,this.defence=40,this.type="magician",this.distance=1,this.distanceAttack=4}}class d extends r{constructor(e){super(e),this.level=e,this.attack=40,this.defence=10,this.type="vampire",this.distance=2,this.distanceAttack=2}}class m extends r{constructor(e){super(e),this.level=e,this.attack=10,this.defence=40,this.type="daemon",this.distance=1,this.distanceAttack=4}}class p extends r{constructor(e){super(e),this.level=e,this.attack=25,this.defence=25,this.type="undead",this.distance=4,this.distanceAttack=1}}var g="auto",u="pointer",f="crosshair",v="not-allowed";const y=new e;y.bindToDOM(document.querySelector("#game-container"));const w=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),P=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.sides={light:{name:"light",first:0,second:1,characters:[h,n,c]},dark:{name:"dark",first:6,second:7,characters:[d,m,p]}},this.positionsToDraw=[],this.selected=void 0,this.movements=[],this.attacks=[],this.statuses={freespace:"free space",enemy:"enemy",allied:"allied",notallowed:"notallowed"},this.currentStatus=void 0,this.level=1,this.score=0}init(){this.theme=t,this.gamePlay.drawUi(this.theme),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addNewGameListener(this.newGame.bind(this,this.level,this.theme)),this.gamePlay.addEscListener(this.onEsc.bind(this)),this.gamePlay.addLoadGameListener(this.loadGame.bind(this)),this.gamePlay.addSaveGameListener(this.saveGame.bind(this))}newGame(s=1,i=t){this.level=s,this.gamePlay.drawUi(i),this.gamePlay.deselectAll(),this.selected=void 0;const a=this.sidePositions(this.sides.light),r=this.sidePositions(this.sides.dark);function h(e){const t=Math.floor(Math.random()*e.length),s=e[t];return e.splice(t,1),s}if(1===s&&(this.positionsToDraw=[]),this.positionsToDraw.length){this.positionsToDraw.forEach((e=>{e.position=h(a)}));const t=this.sidePositions(this.sides.light).filter((e=>!this.positionsToDraw.find((t=>t.position===e)))),i=l(this.sides.dark.characters,s,2*s,!0),n=l(this.sides.light.characters,s,2);this.positionsToDraw.push(n.map((e=>new o(e,this.sides.light.name,h(t))))),this.positionsToDraw.push(i.map((e=>new o(e,this.sides.dark.name,h(r))))),this.positionsToDraw=this.positionsToDraw.flat(),e.showMessage("The enemies are furious! Be careful!")}else{const e=l(this.sides.dark.characters,s,2),t=l(this.sides.light.characters,s,2);this.positionsToDraw=[t.map((e=>new o(e,this.sides.light.name,h(a)))),e.map((e=>new o(e,this.sides.dark.name,h(r))))].flat()}this.gamePlay.redrawPositions(this.positionsToDraw)}loadGame(){this.gamePlay.deselectAll(),this.selected=void 0;const t=this.stateService.load();t?(this.level=t.level,this.positionsToDraw=t.positions,this.theme=t.theme,this.score=t.level,this.gamePlay.drawUi(t.theme),this.gamePlay.redrawPositions(this.positionsToDraw),e.showMessage("Loaded!")):e.showError("No game to load!")}saveGame(){if(this.positionsToDraw.length||this.score){const t={level:this.level,positions:this.positionsToDraw,theme:this.theme,score:this.score};this.stateService.save(t),e.showMessage("Saved!")}else e.showError("No game to save!")}positions(){const e=[];for(let t=0;t<this.gamePlay.boardSize**2;t+=1)e.push(t);return{array:e,lineLength:this.gamePlay.boardSize,length:e.length}}sidePositions(e){const t=this.positions();return t.array.filter((s=>s%t.lineLength===e.first||s%t.lineLength===e.second)).map((e=>e))}onEsc(){this.selected&&this.gamePlay.deselectAll(),this.selected=void 0,this.movements=[],this.attacks=[],this.currentStatus=void 0}levelUp(){switch(this.level+=1,this.positionsToDraw.forEach((e=>{e.character.level=this.level,e.character.attack=Math.ceil(Math.max(e.character.attack,e.character.attack*(1.8-e.character.health/100))),e.character.health=e.character.health+80>100?100:Math.ceil(e.character.health+80)})),this.level){case 2:this.gamePlay.drawUi(s),this.theme=s;break;case 3:this.gamePlay.drawUi(i),this.theme=i;break;case 4:this.gamePlay.drawUi(a),this.theme=a;break;default:this.gamePlay.drawUi(t),this.theme=t}return this.level}moveRevenger(e,t,s){const i=this.resolveArea(e,e.character.distance).filter((e=>-1===this.positionsToDraw.findIndex((t=>t.position===e)))),a=e=>({x:e.position%this.gamePlay.boardSize,y:Math.floor(e.position/this.gamePlay.boardSize)}),r=a(e),o=a(t),l=()=>o.x<=r.x?o.y<=r.y?i.filter((e=>e%this.gamePlay.boardSize>=o.x&&e%this.gamePlay.boardSize<=r.x&&Math.floor(e/this.gamePlay.boardSize)<=r.y&&Math.floor(e/this.gamePlay.boardSize)>=o.y)):i.filter((e=>e%this.gamePlay.boardSize>=o.x&&e%this.gamePlay.boardSize<=r.x&&Math.floor(e/this.gamePlay.boardSize)>r.y&&Math.floor(e/this.gamePlay.boardSize)<=o.y)):o.y<=r.y?i.filter((e=>e%this.gamePlay.boardSize<=o.x&&e%this.gamePlay.boardSize>r.x&&Math.floor(e/this.gamePlay.boardSize)<=r.y&&Math.floor(e/this.gamePlay.boardSize)>=o.y)):i.filter((e=>e%this.gamePlay.boardSize<=o.x&&e%this.gamePlay.boardSize>r.x&&Math.floor(e/this.gamePlay.boardSize)>r.y&&Math.floor(e/this.gamePlay.boardSize)<=o.y)),h=l();if(!h.length){if(!i.length){const t=[...s];t.splice(s.indexOf(e),1),e=t[Math.floor(Math.random()*t.length)]}const t=this.resolveArea(e,e.character.distance).filter((e=>-1===this.positionsToDraw.findIndex((t=>t.position===e))));return t[Math.floor(Math.random()*t.length)]}return h[Math.floor(Math.random()*l.length)]}moveDarksAndAttack(){this.gamePlay.deselectAll();const e=this.positionsToDraw.filter((e=>e.side===this.sides.dark.name)),t=e.find((t=>t.character.attack===Math.max.apply(null,e.map((e=>e.character.attack)))));return new Promise(((s,i)=>{const a=Math.max(t.character.attack-this.selected.character.defence,.1*t.character.attack);this.resolveArea(t,t.character.distanceAttack).find((e=>e===this.selected.position))?(this.selected.character.health-=a,s(a)):i({revenger:t,darks:e})}))}onCellClick(s){function i(){this.selected?.character.health<=0&&this.positionsToDraw.splice(this.positionsToDraw.indexOf(this.selected),1),this.gamePlay.redrawPositions(this.positionsToDraw),this.selected=void 0,this.positionsToDraw.find((e=>e.side===this.sides.light.name))||(this.gamePlay.drawUi(t),e.showMessage("Game over!"))}const a=this.positionsToDraw.find((e=>e.position===s));if(void 0===this.selected)a&&(["bowman","swordsman","magician"].includes(a.character.type)?(this.selected=a,this.gamePlay.selectCell(s)):e.showError("This character is not playable!"));else if(this.currentStatus===this.statuses.freespace)[this.selected.position,s].forEach((e=>this.gamePlay.deselectCell(e))),this.selected.position=s,this.gamePlay.redrawPositions(this.positionsToDraw),this.moveDarksAndAttack().then((e=>this.gamePlay.showDamage(this.selected.position,e)),(e=>{e.revenger.position=this.moveRevenger(e.revenger,this.selected,e.darks)})).then(i.bind(this));else if(this.currentStatus===this.statuses.allied&&this.selected!==a)this.gamePlay.deselectCell(this.selected.position),this.selected=a,this.gamePlay.selectCell(s);else if(this.currentStatus===this.statuses.enemy){const a=this.positionsToDraw.find((e=>e.position===s)),r=Math.max(this.selected.character.attack-a.character.defence,.1*this.selected.character.attack);a.character.health-=r,a.character.health<=0?(this.positionsToDraw.splice(this.positionsToDraw.indexOf(a),1),this.gamePlay.redrawPositions(this.positionsToDraw),this.gamePlay.deselectAll(),this.positionsToDraw.find((e=>e.side===this.sides.dark.name))?this.moveDarksAndAttack().then((e=>this.gamePlay.showDamage(this.selected.position,e)),(e=>{e.revenger.position=this.moveRevenger(e.revenger,this.selected,e.darks)})).then(i.bind(this)):(this.selected=void 0,this.score=this.positionsToDraw.reduce(((e,t)=>e+t.character.health),this.score),4===this.level?(this.gamePlay.drawUi(t),e.showMessage(`Victory! Your score is ${this.score}.`)):(e.showMessage(`Level up! Your score is ${this.score}.`),this.newGame(this.levelUp(),this.theme)))):this.gamePlay.showDamage(s,r).then((()=>this.gamePlay.redrawPositions(this.positionsToDraw))).then((()=>this.moveDarksAndAttack())).then((e=>this.gamePlay.showDamage(this.selected.position,e)),(e=>{e.revenger.position=this.moveRevenger(e.revenger,this.selected,e.darks)})).then(i.bind(this))}else e.showError("This action is not allowed!"),this.gamePlay.deselectCell(this.selected.position),this.selected=void 0}resolveArea(e,t){const s=[];for(let i=e.position-this.gamePlay.boardSize*t;i<=e.position+this.gamePlay.boardSize*t;i+=this.gamePlay.boardSize)if(i>=0&&i<this.gamePlay.boardSize**2)for(let e=i-t;e<=i+t;e+=1)e>=i-i%this.gamePlay.boardSize&&e<i+(this.gamePlay.boardSize-i%this.gamePlay.boardSize)&&s.push(e);return s.splice(s.indexOf(e.position),1),s}onCellEnter(e){if(this.positionsToDraw.forEach((t=>{t.position===e&&this.gamePlay.showCellTooltip(function(e){const t=String.fromCodePoint(127894),s=String.fromCodePoint(9876),i=String.fromCodePoint(128737),a=String.fromCodePoint(10084);return`${t}${e.level} ${s}${e.attack} ${i}${e.defence} ${a}${e.health}`}(t.character),e)})),this.selected){const t={distance:this.selected.character.distance,distanceAttack:this.selected.character.distanceAttack};this.movements=this.resolveArea(this.selected,t.distance).filter((e=>-1===this.positionsToDraw.findIndex((t=>t.position===e)))),this.attacks=this.resolveArea(this.selected,t.distanceAttack).filter((e=>-1===this.positionsToDraw.findIndex((t=>t.position===e&&t.side===this.sides.light.name)))),this.movements.includes(e)?(this.gamePlay.selectCell(e,"green"),this.gamePlay.setCursor(u),this.currentStatus=this.statuses.freespace):this.attacks.includes(e)&&this.positionsToDraw.filter((e=>e.side===this.sides.dark.name)).find((t=>t.position===e))?(this.gamePlay.selectCell(e,"red"),this.gamePlay.setCursor(f),this.currentStatus=this.statuses.enemy):this.positionsToDraw.filter((e=>e.side===this.sides.light.name)).find((t=>t.position===e&&t.position!==this.selected.position))?(this.gamePlay.setCursor(u),this.currentStatus=this.statuses.allied):(this.gamePlay.setCursor(v),this.currentStatus=this.statuses.notallowed)}else this.positionsToDraw.filter((e=>e.side===this.sides.light.name)).find((t=>t.position===e))?this.gamePlay.setCursor(u):this.gamePlay.setCursor(g)}onCellLeave(e){this.gamePlay.hideCellTooltip(e),e!==this.selected?.position&&this.gamePlay.deselectCell(e),this.gamePlay.setCursor(g)}}(y,w);P.init()}();